name: Go

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: ./reg-attendee-transferclient

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18

    # START pin version: pact-1.88.84 has a syntax error, so temporarily pinning the version
    # curl -L https://raw.githubusercontent.com/pact-foundation/pact-ruby-standalone/master/install.sh -o ./install-pact.sh &&
    # cat ./install-pact.sh &&
    # chmod u+x ./install-pact.sh &&
    # ./install-pact.sh &&
    # rm ./install-pact.sh &&
    # END pin version done

    - name: Set up pact-foundation/pact-ruby-standalone
      run: >
        curl -L https://github.com/pact-foundation/pact-ruby-standalone/releases/download/v1.88.83/pact-1.88.83-linux-x86_64.tar.gz -o pact-1.88.83-linux-x86_64.tar.gz &&
        tar xzf pact-1.88.83-linux-x86_64.tar.gz &&
        rm pact-1.88.83-linux-x86_64.tar.gz &&
        ls -al ./pact/bin &&
        echo "$(pwd)/pact/bin" >> $GITHUB_PATH
      shell: bash

    - name: Print pact CLI versions
      run: |-
        echo "PATH=$PATH
        pact-broker: $(pact-broker version)
        pact-message: $(pact-message version)
        pact-mock-service: $(pact-mock-service version)
        pact-provider-verifier: $(pact-provider-verifier version)
        pact-stub-service: $(pact-stub-service version)"
      shell: bash

    - name: Build
      run: go build -v ./...
      working-directory: ./reg-attendee-transferclient

    - name: Test
      run: go test -v ./...
      working-directory: ./reg-attendee-transferclient
